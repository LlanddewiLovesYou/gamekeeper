[{"/Users/stride-admin/development/gamekeeper/src/index.tsx":"1","/Users/stride-admin/development/gamekeeper/src/reportWebVitals.ts":"2","/Users/stride-admin/development/gamekeeper/src/App.tsx":"3","/Users/stride-admin/development/gamekeeper/src/hooks/useCurrentUser.tsx":"4","/Users/stride-admin/development/gamekeeper/src/components/AppContent/AppContent.tsx":"5","/Users/stride-admin/development/gamekeeper/src/hooks/useGames.tsx":"6","/Users/stride-admin/development/gamekeeper/src/components/Masthead/Masthead.tsx":"7","/Users/stride-admin/development/gamekeeper/src/util/jwt.ts":"8","/Users/stride-admin/development/gamekeeper/src/components/UserForm/UserForm.tsx":"9","/Users/stride-admin/development/gamekeeper/src/pages/SearchPage/SearchPage.tsx":"10","/Users/stride-admin/development/gamekeeper/src/pages/GamesPage/GamesPage.tsx":"11","/Users/stride-admin/development/gamekeeper/src/pages/FriendsPage/FriendsPage.tsx":"12","/Users/stride-admin/development/gamekeeper/src/hooks/useLogin.tsx":"13","/Users/stride-admin/development/gamekeeper/src/components/Block/Block.tsx":"14","/Users/stride-admin/development/gamekeeper/src/components/Friend/Friend.tsx":"15","/Users/stride-admin/development/gamekeeper/src/util/env.ts":"16","/Users/stride-admin/development/gamekeeper/src/hooks/useAudio.tsx":"17","/Users/stride-admin/development/gamekeeper/src/components/CreateGameForm/CreateGameForm.tsx":"18","/Users/stride-admin/development/gamekeeper/src/util/makeSignedRequest.tsx":"19","/Users/stride-admin/development/gamekeeper/src/pages/LandingPage/LandingPage.tsx":"20","/Users/stride-admin/development/gamekeeper/src/components/Block/BlockMenu/BlockMenu.tsx":"21"},{"size":589,"mtime":1611954410717,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1611612799608,"results":"24","hashOfConfig":"23"},{"size":1010,"mtime":1611955953300,"results":"25","hashOfConfig":"23"},{"size":920,"mtime":1611953990849,"results":"26","hashOfConfig":"23"},{"size":1961,"mtime":1612136639388,"results":"27","hashOfConfig":"23"},{"size":575,"mtime":1612143789014,"results":"28","hashOfConfig":"23"},{"size":1217,"mtime":1611960245605,"results":"29","hashOfConfig":"23"},{"size":182,"mtime":1609883536664,"results":"30","hashOfConfig":"23"},{"size":1438,"mtime":1611955480573,"results":"31","hashOfConfig":"23"},{"size":1309,"mtime":1611616218255,"results":"32","hashOfConfig":"23"},{"size":2460,"mtime":1611960431662,"results":"33","hashOfConfig":"23"},{"size":1034,"mtime":1611616515246,"results":"34","hashOfConfig":"23"},{"size":1188,"mtime":1612143796284,"results":"35","hashOfConfig":"23"},{"size":4374,"mtime":1612143878132,"results":"36","hashOfConfig":"23"},{"size":1884,"mtime":1611618432663,"results":"37","hashOfConfig":"23"},{"size":177,"mtime":1611952777959,"results":"38","hashOfConfig":"23"},{"size":370,"mtime":1611617370312,"results":"39","hashOfConfig":"23"},{"size":2593,"mtime":1611957081716,"results":"40","hashOfConfig":"23"},{"size":664,"mtime":1611621857486,"results":"41","hashOfConfig":"23"},{"size":550,"mtime":1611961190763,"results":"42","hashOfConfig":"23"},{"size":701,"mtime":1612144065368,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"10azvzm",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stride-admin/development/gamekeeper/src/index.tsx",[],["92","93"],"/Users/stride-admin/development/gamekeeper/src/reportWebVitals.ts",[],"/Users/stride-admin/development/gamekeeper/src/App.tsx",["94"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useCurrentUser, UserContext } from \"./hooks/useCurrentUser\";\nimport { AppContent } from \"./components/AppContent/AppContent\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const {\n    currentUser,\n    setCurrentUser,\n    validateUser,\n    loggedIn,\n    setLoggedIn,\n  } = useCurrentUser();\n\n  const history = useHistory();\n  const currentUserId = currentUser?._id;\n\n  useEffect(() => {\n    const userValidationSequence = async () => {\n      await validateUser();\n      if (currentUserId) {\n        history.push(`/gamekeeper/games/${currentUserId}`);\n      }\n    };\n    userValidationSequence();\n  }, [currentUserId]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"app__background\">\n        <UserContext.Provider\n          value={{ currentUser, setCurrentUser, loggedIn, setLoggedIn }}\n        >\n          <AppContent />\n        </UserContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/stride-admin/development/gamekeeper/src/hooks/useCurrentUser.tsx",[],"/Users/stride-admin/development/gamekeeper/src/components/AppContent/AppContent.tsx",["95"],"import React, { useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Masthead } from \"../../components/Masthead/Masthead\";\nimport { GamesContext, useGames } from \"../../hooks/useGames\";\nimport { UserForm } from \"../UserForm/UserForm\";\nimport { GamesPage } from \"../../pages/GamesPage/GamesPage\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { FriendsPage } from \"../../pages/FriendsPage/FriendsPage\";\nimport { SearchPage } from \"../../pages/SearchPage/SearchPage\";\nimport { LandingPage } from \"../../pages/LandingPage/LandingPage\";\n\ninterface Props {}\n\nexport const AppContent: React.FC<Props> = () => {\n  const { loggedIn } = useContext(UserContext);\n  const { games, setGames, fetchUsersGames, user } = useGames();\n  return (\n    <GamesContext.Provider value={{ games, setGames, fetchUsersGames, user }}>\n      {/* <Router> */}\n      <Masthead />\n      <Switch>\n        <Route exact path=\"/gamekeeper\">\n          <LandingPage />\n        </Route>\n        <Route path=\"/gamekeeper/games/:userId\">\n          <GamesPage />\n        </Route>\n        <Route path=\"/gamekeeper/users/search\">\n          <SearchPage />\n        </Route>\n        {!loggedIn ? (\n          <Route path=\"/gamekeeper/login\">\n            <UserForm type=\"login\" />\n          </Route>\n        ) : (\n          <Redirect to=\"/gamekeeper/games\" from=\"/gamekeeper/login\" />\n        )}\n        {loggedIn ? (\n          <Route path=\"/gamekeeper/friends\">\n            <FriendsPage />\n          </Route>\n        ) : (\n          <Redirect to=\"/gamekeeper/games\" from=\"/gamekeeper/friends\" />\n        )}\n        {!loggedIn ? (\n          <Route path=\"/gamekeeper/register\">\n            <UserForm type=\"register\" />\n          </Route>\n        ) : (\n          <Redirect to=\"/gamekeeper/games\" from=\"/gamekeeper/register\" />\n        )}\n      </Switch>\n      {/* </Router> */}\n    </GamesContext.Provider>\n  );\n};\n","/Users/stride-admin/development/gamekeeper/src/hooks/useGames.tsx",[],"/Users/stride-admin/development/gamekeeper/src/components/Masthead/Masthead.tsx",[],"/Users/stride-admin/development/gamekeeper/src/util/jwt.ts",[],"/Users/stride-admin/development/gamekeeper/src/components/UserForm/UserForm.tsx",[],"/Users/stride-admin/development/gamekeeper/src/pages/SearchPage/SearchPage.tsx",[],"/Users/stride-admin/development/gamekeeper/src/pages/GamesPage/GamesPage.tsx",["96"],"import React, { useMemo, useEffect, useContext } from \"react\";\nimport { Block } from \"../../components/Block/Block\";\nimport { GamesContext } from \"../../hooks/useGames\";\nimport { useParams } from \"react-router-dom\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport \"./GamesPage.scss\";\n\ninterface Props {}\n\nexport const GamesPage: React.FC<Props> = () => {\n  const { games, fetchUsersGames, user, setGames } = useContext(GamesContext);\n  const params = useParams();\n  const userId = params.userId;\n  const { setCurrentUser, currentUser } = useContext(UserContext);\n  const followUser = makeSignedRequest(\"PATCH\", `/users/friend/${userId}`);\n  useEffect(() => {\n    fetchUsersGames(userId);\n  }, [userId]);\n\n  const sortedGames = useMemo(() => {\n    if (games && games.length > 0) {\n      const inProgress = games.filter((game: any) => game.completed === false);\n      const finished = games.filter((game: any) => game.completed === true);\n      const sorted = [...inProgress, ...finished];\n      return sorted;\n    } else {\n      return [];\n    }\n  }, [games]);\n\n  const onSubmit = async () => {\n    const { data: updatedUser } = await followUser();\n    setCurrentUser(updatedUser);\n  };\n\n  const isNotCurrentUser = userId !== currentUser._id;\n  const isFriend = currentUser.friends.includes(userId);\n\n  const displayButton = isNotCurrentUser && !isFriend;\n\n  return (\n    <div className=\"games-page center\">\n      <div className=\"header\">\n        {displayButton && (\n          <div\n            className=\"app__icon plus\"\n            onClick={() => onSubmit()}\n            title=\"Add This User to My Friends\"\n          />\n        )}\n        {isFriend && (\n          <div\n            className=\"app__icon star\"\n            title={`${user.userName} is your friend`}\n          />\n        )}\n        {user.userName && (\n          <div className=\"username\">{user.userName}'s Games</div>\n        )}\n      </div>\n      <div className=\"blocks\">\n        {games.length > 0 ? (\n          sortedGames.map((game) => (\n            <Block\n              key={game._id}\n              game={game}\n              completed={game.completed}\n              setGames={setGames}\n            />\n          ))\n        ) : (\n          <div className=\"no-games\">{`Looks like you don't have any games yet! Go add some by clicking the plus sign in the Navbar!`}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/stride-admin/development/gamekeeper/src/pages/FriendsPage/FriendsPage.tsx",["97"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { Friend } from \"../../components/Friend/Friend\";\nimport \"./FriendsPage.scss\";\n\ninterface Props {}\n\nexport const FriendsPage: React.FC<Props> = () => {\n  const { currentUser } = useContext(UserContext);\n  const [friends, setFriends] = useState<any>([]);\n\n  useEffect(() => {\n    const getFriends = async () => {\n      const friendRequest = makeSignedRequest(\n        \"GET\",\n        `/users/friends/${currentUser._id}`\n      );\n      const friendResponse = await friendRequest();\n      setFriends(friendResponse.data);\n    };\n    getFriends();\n  }, []);\n\n  return (\n    <div className=\"friends-page\">\n      <div className=\"header\">{currentUser.userName}'s Friends</div>\n      <div className=\"friends\">\n        {friends.map((friend: any) => (\n          <Friend friend={friend} key={friend._id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","/Users/stride-admin/development/gamekeeper/src/hooks/useLogin.tsx",[],"/Users/stride-admin/development/gamekeeper/src/components/Block/Block.tsx",[],"/Users/stride-admin/development/gamekeeper/src/components/Friend/Friend.tsx",[],"/Users/stride-admin/development/gamekeeper/src/util/env.ts",[],"/Users/stride-admin/development/gamekeeper/src/hooks/useAudio.tsx",[],"/Users/stride-admin/development/gamekeeper/src/components/CreateGameForm/CreateGameForm.tsx",["98","99"],"import React, { useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { getToken } from \"../../util/jwt\";\nimport { GamesContext } from \"../../hooks/useGames\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport \"./CreateGameForm.scss\";\n\ninterface Props {}\n\nexport const CreateGameForm: React.FC<Props> = () => {\n  const [title, setGameTitle] = useState(\"\");\n  const [year, setGameYear] = useState(\"\");\n  const [rogueLike, setRogueLike] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { currentUser } = useContext(UserContext);\n  const { fetchUsersGames } = useContext(GamesContext);\n  let history = useHistory();\n\n  const createGame = async (e: any, title: string, year: string) => {\n    e.preventDefault();\n    const game = {\n      title,\n      year,\n      started: new Date(Date.now()).toDateString(),\n      lastPlayed: new Date(Date.now()).toDateString(),\n      hours: 0,\n      completed: false,\n      completedOn: \"\",\n      userId: currentUser._id,\n      rogueLike,\n    };\n\n    const gamePostRequest = makeSignedRequest(\n      \"POST\",\n      `/games/${currentUser._id}`,\n      game\n    );\n\n    const newGame = await gamePostRequest();\n\n    await fetchUsersGames(currentUser._id);\n    setOpen(false);\n    setGameTitle(\"\");\n    setGameYear(\"\");\n    setRogueLike(false);\n    history.push(`/gamekeeper/games/${currentUser._id}`);\n    return newGame;\n  };\n\n  return (\n    <div className=\"create-game-form\">\n      <div\n        className=\"app__icon plus\"\n        onClick={() => setOpen(!open)}\n        title=\"Add New Game\"\n      />\n      {open && (\n        <div className=\"content\">\n          <label htmlFor=\"\">\n            Title:\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setGameTitle(e.target.value)}\n            />\n          </label>\n          <label htmlFor=\"\">\n            Release Year:\n            <input\n              type=\"text\"\n              value={year}\n              onChange={(e) => setGameYear(e.target.value)}\n            />\n          </label>\n          <label htmlFor=\"\">\n            Rogue-Like?:\n            <input\n              type=\"checkbox\"\n              checked={rogueLike}\n              onChange={() => {\n                setRogueLike(!rogueLike);\n              }}\n            />\n          </label>\n          <button onClick={(e) => createGame(e, title, year)}>\n            Create Game\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/stride-admin/development/gamekeeper/src/util/makeSignedRequest.tsx",[],"/Users/stride-admin/development/gamekeeper/src/pages/LandingPage/LandingPage.tsx",[],"/Users/stride-admin/development/gamekeeper/src/components/Block/BlockMenu/BlockMenu.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":27,"column":6,"nodeType":"106","endLine":27,"endColumn":21,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":20,"nodeType":"110","messageId":"111","endLine":3,"endColumn":26},{"ruleId":"104","severity":1,"message":"112","line":19,"column":6,"nodeType":"106","endLine":19,"endColumn":14,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"114","line":23,"column":6,"nodeType":"106","endLine":23,"endColumn":8,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"108","severity":1,"message":"117","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":18},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'validateUser'. Either include them or remove the dependency array.","ArrayExpression",["120"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchUsersGames'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'currentUser._id'. Either include it or remove the dependency array.",["122"],"'Axios' is defined but never used.","'getToken' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [currentUserId, history, validateUser]",{"range":"129","text":"130"},"Update the dependencies array to be: [fetchUsersGames, userId]",{"range":"131","text":"132"},"Update the dependencies array to be: [currentUser._id]",{"range":"133","text":"134"},[692,707],"[currentUserId, history, validateUser]",[776,784],"[fetchUsersGames, userId]",[743,745],"[currentUser._id]"]