{"version":3,"sources":["util/jwt.ts","hooks/useCurrentUser.tsx","util/platforms.ts","hooks/useGames.tsx","util/env.ts","util/makeSignedRequest.tsx","components/CreateGameForm/CreateGameForm.tsx","components/Masthead/Masthead.tsx","components/UserForm/UserForm.tsx","hooks/useLogin.tsx","hooks/useAudio.tsx","components/Block/BlockMenu/BlockMenu.tsx","components/Block/Block.tsx","pages/GamesPage/GamesPage.tsx","components/Friend/Friend.tsx","pages/FriendsPage/FriendsPage.tsx","components/Game/Game.tsx","pages/SearchPage/SearchPage.tsx","pages/LandingPage/LandingPage.tsx","components/AppContent/AppContent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getToken","localStorage","getItem","setToken","token","setItem","UserContext","React","createContext","undefined","PLATFORM_OPTIONS","GamesContext","useGames","useState","games","setGames","userName","user","setUser","fetchUsersGames","userId","a","Axios","get","process","gamesResponse","data","makeSignedRequest","method","route","body","url","config","headers","Authorization","post","patch","delete","CreateGameForm","title","setGameTitle","year","setGameYear","rogueLike","setRogueLike","platform","setPlatform","open","setOpen","currentUser","useContext","history","useHistory","createGame","e","preventDefault","game","gamePostRequest","_id","newGame","push","className","onClick","htmlFor","type","value","onChange","target","map","checked","Masthead","loggedIn","to","UserForm","formText","buttonText","submitUrl","setLoggedIn","setCurrentUser","setUserName","password","setPassword","error","setError","onSubmit","loginData","loginResponse","accessToken","message","useLogin","useAudio","audioUrl","audio","Audio","children","play","playAudio","BlockMenu","deleteFunction","usersGame","addFunction","deleteGame","addGame","Block","completed","complete","setComplete","hours","toString","setHours","editing","setEditing","lastPlayed","setLastplayed","backgroundClass","rogueLikeClass","AudioBoundary","updateHours","Date","now","toDateString","incrementRequest","parseInt","toggleComplete","completionUpdateRequest","completedOn","getUpdatedGames","setTimeout","updatedGamesResponse","updatedGames","deleteGameRequest","addToMyGames","copiedGame","started","addRequest","gameId","GamesPage","useParams","followUser","useEffect","sortedGames","useMemo","length","inProgress","filter","finished","updatedUser","isNotCurrentUser","isFriend","friends","includes","displayButton","Friend","friend","unfriendRequest","addFriendRequest","unfriend","unfriendResponse","addFriend","addFriendResponse","createdAt","FriendsPage","setFriends","friendRequest","friendResponse","getFriends","Game","isUsersGame","find","entry","addGameRequest","SearchPage","users","setUsers","query","setQuery","searchRequest","search","searchResults","userResults","gameResults","LandingPage","AppContent","Provider","exact","path","from","App","validateUser","userResponse","validUser","useCurrentUser","currentUserId","userValidationSequence","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04796d6d.chunk.js","sourcesContent":["export const getToken = () => {\n  return localStorage.getItem(\"GAMEKEEPER_JWT\");\n};\n\nexport const setToken = (token: string) => {\n  localStorage.setItem(\"GAMEKEEPER_JWT\", token);\n};\n","import React, { useState } from \"react\";\nimport { getToken } from \"../util/jwt\";\nimport { getDomain } from \"../util/env\";\n\nimport Axios from \"axios\";\n\nexport const UserContext = React.createContext(undefined);\n\nexport const useCurrentUser = () => {\n  const [currentUser, setCurrentUser] = useState({\n    userName: \"\",\n    _id: undefined,\n    friends: [],\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const validateUser = async () => {\n    const accessToken = getToken();\n    if (accessToken) {\n      const userResponse = await Axios.post(`${getDomain()}/users/validate`, {\n        accessToken,\n      });\n      const validUser = userResponse.data;\n      if (validUser) {\n        setCurrentUser(validUser);\n        setLoggedIn(true);\n      } else {\n        return;\n      }\n    }\n  };\n\n  return {\n    UserContext,\n    currentUser,\n    setCurrentUser,\n    validateUser,\n    loggedIn,\n    setLoggedIn,\n  };\n};\n","export const PLATFORM_OPTIONS = [\n  \"PlayStation 4\",\n  \"PlayStation 5\",\n  \"Xbox One\",\n  \"Xbox X/S\",\n  \"Nintendo Switch\",\n  \"Nintendo DS\",\n  \"VR / Occulus\",\n  \"PC\",\n  \"iOS\",\n  \"Android\",\n];\n","import React, { useState } from \"react\";\nimport { getDomain } from \"../util/env\";\nimport Axios from \"axios\";\n\nexport const GamesContext = React.createContext(undefined);\n\nexport const useGames = () => {\n  const [games, setGames] = useState([]);\n  const [user, setUser] = useState({ userName: \"\" });\n\n  const fetchUsersGames = async (userId: string) => {\n    const gamesResponse = await Axios.get(`${getDomain()}/my-games/${userId}`);\n    setGames(gamesResponse.data.games);\n    setUser(gamesResponse.data.user);\n  };\n\n  return { games, setGames, fetchUsersGames, user };\n};\n","export const getDomain = () => {\n  if (process.env.NODE_ENV === \"development\") {\n    return \"http://localhost:5000\";\n  } else {\n    return process.env.REACT_APP_API_URL;\n  }\n};\n","import Axios from \"axios\";\nimport { getDomain } from \"./env\";\nimport { getToken } from \"./jwt\";\n\nexport const makeSignedRequest = (\n  method: string,\n  route: string,\n  body?: object\n) => {\n  const url = `${getDomain()}${route}`;\n  const config = { headers: { Authorization: `Bearer ${getToken()}` } };\n  switch (method) {\n    case \"GET\":\n      return async () => await Axios.get(url, config);\n    case \"POST\":\n      return async () => await Axios.post(url, body, config);\n    case \"PATCH\":\n      return async () => await Axios.patch(url, body, config);\n    case \"DELETE\":\n      return async () => await Axios.delete(url, config);\n    default:\n      break;\n  }\n};\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { PLATFORM_OPTIONS } from \"../../util/platforms\";\nimport { GamesContext } from \"../../hooks/useGames\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport \"./CreateGameForm.scss\";\n\ninterface Props {}\n\nexport const CreateGameForm: React.FC<Props> = () => {\n  const [title, setGameTitle] = useState(\"\");\n  const [year, setGameYear] = useState(\"\");\n  const [rogueLike, setRogueLike] = useState(false);\n  const [platform, setPlatform] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const { currentUser } = useContext(UserContext);\n  const { fetchUsersGames } = useContext(GamesContext);\n  let history = useHistory();\n\n  const createGame = async (e: any, title: string, year: string) => {\n    e.preventDefault();\n    const game = {\n      title,\n      year,\n      rogueLike,\n      platform,\n    };\n\n    const gamePostRequest = makeSignedRequest(\n      \"POST\",\n      `/my-games/${currentUser._id}`,\n      { game }\n    );\n\n    const newGame = await gamePostRequest();\n\n    await fetchUsersGames(currentUser._id);\n    setOpen(false);\n    setGameTitle(\"\");\n    setGameYear(\"\");\n    setRogueLike(false);\n    history.push(`/gamekeeper/games/${currentUser._id}`);\n    return newGame;\n  };\n\n  return (\n    <div className=\"create-game-form\">\n      <div\n        className=\"app__icon plus\"\n        onClick={() => setOpen(!open)}\n        title=\"Add New Game\"\n      />\n      {open && (\n        <div className=\"content\">\n          <label htmlFor=\"\">\n            Title:\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setGameTitle(e.target.value)}\n            />\n          </label>\n          <label htmlFor=\"\">\n            Release Year:\n            <input\n              type=\"text\"\n              value={year}\n              onChange={(e) => setGameYear(e.target.value)}\n            />\n          </label>\n          <label htmlFor=\"\">\n            Platform:\n            <select onChange={(e) => setPlatform(e.target.value)}>\n              <option value=\"\"> - </option>\n              {PLATFORM_OPTIONS.map((platform) => {\n                return <option value={platform}>{platform}</option>;\n              })}\n            </select>\n          </label>\n          <label htmlFor=\"\">\n            Rogue-Like?:\n            <input\n              type=\"checkbox\"\n              checked={rogueLike}\n              onChange={() => {\n                setRogueLike(!rogueLike);\n              }}\n            />\n          </label>\n          <button onClick={(e) => createGame(e, title, year)}>\n            Create Game\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { Link } from \"react-router-dom\";\nimport \"./Masthead.scss\";\nimport { CreateGameForm } from \"../CreateGameForm/CreateGameForm\";\n\ninterface Props {}\n\nexport const Masthead: React.FC<Props> = () => {\n  const { loggedIn, currentUser } = useContext(UserContext);\n  return (\n    <div className=\"masthead\">\n      <div className=\"title\">Gamekeeper</div>\n      {loggedIn ? (\n        <div className=\"logged-in\">\n          <Link to=\"/gamekeeper/users/search\">\n            <div className=\"app__icon mag\" title=\"Find A Friend\" />\n          </Link>\n          <Link to=\"/gamekeeper/friends\">\n            <div className=\"app__icon star\" title=\"My Friends\" />\n          </Link>\n          <CreateGameForm />\n          <span title=\"My Games\">\n            Welcome,{\" \"}\n            <Link to={`/gamekeeper/games/${currentUser?._id}`}>\n              {currentUser?.userName}\n            </Link>\n          </span>\n        </div>\n      ) : (\n        <div className=\"login\">\n          <Link to=\"/gamekeeper/register\">Create New User</Link>\n          <Link to=\"/gamekeeper/login\">Login</Link>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useLogin } from \"../../hooks/useLogin\";\nimport { getDomain } from \"../../util/env\";\n\nimport \"./UserForm.scss\";\n\ninterface Props {\n  type: string;\n  path?: string;\n}\n\nexport const UserForm: React.FC<Props> = ({ type }) => {\n  let formText;\n  let buttonText;\n  let submitUrl;\n\n  switch (type) {\n    case \"login\":\n      formText = \"Log In\";\n      buttonText = \"Log In\";\n      submitUrl = `${getDomain()}/users/login`;\n      break;\n    case \"register\":\n      formText = \"Create Account\";\n      buttonText = \"Submit\";\n      submitUrl = `${getDomain()}/users`;\n      break;\n  }\n\n  const {\n    onSubmit,\n    error,\n    setUserName,\n    userName,\n    setPassword,\n    password,\n  } = useLogin(submitUrl);\n\n  return (\n    <div className=\"user-form\">\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div>{formText}</div>\n        <div className={`error ${error ? \"visible\" : null}`}>{error}</div>\n        <label htmlFor=\"username\">\n          Username\n          <input\n            type=\"text\"\n            onChange={(e) => setUserName(e.target.value)}\n            value={userName}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n        </label>\n        <button type=\"submit\">{buttonText}</button>\n      </form>\n    </div>\n  );\n};\n","import { useContext, useState } from \"react\";\nimport { UserContext } from \"./useCurrentUser\";\nimport { useHistory } from \"react-router-dom\";\nimport { setToken } from \"../util/jwt\";\nimport Axios from \"axios\";\n\nexport const useLogin = (submitUrl: string) => {\n  const { setLoggedIn, loggedIn, currentUser, setCurrentUser } = useContext(\n    UserContext\n  );\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  let history = useHistory();\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    const loginData = { userName, password };\n\n    try {\n      const loginResponse = await Axios.post(submitUrl, loginData);\n      const token = loginResponse.data.accessToken;\n      const user = loginResponse.data.currentUser;\n      if (token) {\n        setCurrentUser(user);\n        setToken(token);\n        setLoggedIn(true);\n        history.push(`/gamekeeper/games/${user._id}`);\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  return {\n    onSubmit,\n    loggedIn,\n    currentUser,\n    userName,\n    setUserName,\n    password,\n    setPassword,\n    error,\n    setError,\n  };\n};\n","import React from \"react\";\n\ninterface Props {}\n\nexport const useAudio = (audioUrl: string) => {\n  let audio = new Audio(audioUrl);\n  const playAudio = (e: any) => {\n    e.preventDefault();\n    audio.play();\n  };\n  const AudioBoundary: React.FC<Props> = ({ children }) => {\n    return <div onClick={(e) => playAudio(e)}>{children}</div>;\n  };\n\n  return AudioBoundary;\n};\n","import React, { useState } from \"react\";\nimport \"./BlockMenu.scss\";\n\ninterface Props {\n  deleteFunction: any;\n  addFunction: any;\n  usersGame: boolean;\n}\n\nexport const BlockMenu: React.FC<Props> = ({\n  deleteFunction,\n  usersGame,\n  addFunction,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const deleteGame = async (e) => {\n    await deleteFunction(e);\n    setOpen(false);\n  };\n\n  const addGame = async (e) => {\n    await addFunction(e);\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"block-menu\">\n      <div\n        className=\"app__icon coin icon\"\n        onClick={() => setOpen(!open)}\n        title=\"Edit/Delete Game\"\n      />\n      {open && (\n        <div className=\"menu\">\n          <ul>\n            <li onClick={(e) => addGame(e)}>Add to My Games</li>\n            {usersGame && (\n              <li className=\"delete\" onClick={(e) => deleteGame(e)}>\n                Delete\n              </li>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GameEntry } from \"../../../types/Game\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Block.scss\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { useAudio } from \"../../hooks/useAudio\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { BlockMenu } from \"./BlockMenu/BlockMenu\";\n\ninterface Props {\n  completed: Boolean;\n  game: GameEntry;\n  setGames: any;\n}\n\nexport const Block: React.FC<Props> = ({ completed, game, setGames }) => {\n  const [complete, setComplete] = useState(completed);\n  const [hours, setHours] = useState(game.hours.toString());\n  const [editing, setEditing] = useState(false);\n  const [lastPlayed, setLastplayed] = useState(game.lastPlayed);\n  const backgroundClass = complete ? \"completed\" : null;\n  const rogueLikeClass = game.rogueLike ? \"brick\" : \"question\";\n  const AudioBoundary = useAudio(\"/smw_coin.wav\");\n  const { loggedIn, currentUser } = useContext(UserContext);\n  const history = useHistory();\n\n  const updateHours = async (e: any) => {\n    e.preventDefault();\n    if (editing) {\n      setLastplayed(new Date(Date.now()).toDateString());\n      const incrementRequest = makeSignedRequest(\n        \"PATCH\",\n        `/my-games/${game._id}`,\n        {\n          hours: parseInt(hours),\n        }\n      );\n      await incrementRequest();\n    }\n    setEditing(!editing);\n  };\n\n  const toggleComplete = async (e: any) => {\n    e.preventDefault();\n\n    const completionUpdateRequest = makeSignedRequest(\n      \"PATCH\",\n      `/my-games/${game._id}`,\n      { completed: !complete, completedOn: new Date(Date.now()).toDateString() }\n    );\n\n    const getUpdatedGames = makeSignedRequest(\n      \"GET\",\n      `/my-games/${currentUser._id}`\n    );\n    await completionUpdateRequest();\n    setComplete(!complete);\n    setTimeout(async () => {\n      const updatedGamesResponse = await getUpdatedGames();\n      const updatedGames = updatedGamesResponse.data.games;\n      setGames(updatedGames);\n    }, 2000);\n  };\n\n  const deleteGame = async (e) => {\n    e.preventDefault();\n    const deleteGameRequest = makeSignedRequest(\n      \"DELETE\",\n      `/my-games/${game._id}`\n    );\n\n    const getUpdatedGames = makeSignedRequest(\n      \"GET\",\n      `/my-games/${currentUser._id}`\n    );\n    await deleteGameRequest();\n    const updatedGamesResponse = await getUpdatedGames();\n    const updatedGames = updatedGamesResponse.data.games;\n    setGames(updatedGames);\n  };\n\n  const addToMyGames = async (e) => {\n    // need to fix\n    e.preventDefault();\n\n    const copiedGame = {\n      title: game.title,\n      year: game.year,\n      rogueLike: game.rogueLike || false,\n      started: new Date(Date.now()).toDateString(),\n      lastPlayed: new Date(Date.now()).toDateString(),\n      hours: 0,\n      completed: false,\n      completedOn: \"\",\n      userId: currentUser._id,\n    };\n\n    const addRequest = makeSignedRequest(\n      \"POST\",\n      `/my-games/${currentUser._id}?gameId=${game.gameId}`,\n      copiedGame\n    );\n    await addRequest();\n    history.push(`/gamekeeper/games/${currentUser._id}`);\n  };\n\n  const usersGame = loggedIn && game.userId === currentUser._id;\n\n  return (\n    <div className={\"block \" + backgroundClass + \" \" + rogueLikeClass}>\n      <div className=\"block__flex\">\n        <div className=\"title\">\n          <div>\n            <h1>{game.title}</h1>\n            <div>{game.platform}</div>\n            <div>{game.year}</div>\n          </div>\n          <BlockMenu\n            deleteFunction={deleteGame}\n            usersGame={usersGame}\n            addFunction={addToMyGames}\n          />\n        </div>\n\n        <div>\n          <label className=\"block__label\">\n            Started On:\n            <div className=\"block__info\">{game.started}</div>\n          </label>\n          <label className=\"block__label\">\n            Last Played:\n            <div className=\"block__info\">{lastPlayed}</div>\n          </label>\n        </div>\n\n        <div className=\"hours\">\n          <label className=\"block__label\">\n            Hours Played:\n            {editing ? (\n              <input\n                type=\"text\"\n                value={hours}\n                onChange={(e) => setHours(e.target.value)}\n              />\n            ) : (\n              <div className=\"block__info\">{hours}</div>\n            )}\n          </label>\n          {!complete && usersGame && (\n            <div\n              title=\"Add Play Time\"\n              className=\"app__icon plus\"\n              onClick={(e) => {\n                updateHours(e);\n              }}\n            />\n          )}\n        </div>\n\n        {complete && (\n          <label htmlFor=\"\" className=\"block__label\">\n            Completed:\n            <div className=\"block__info\">{game.completedOn}</div>\n          </label>\n        )}\n\n        {!complete\n          ? usersGame && (\n              <AudioBoundary>\n                <button\n                  className=\"button complete-button\"\n                  onClick={(e) => toggleComplete(e)}\n                >\n                  Complete <div className=\"app__icon coin\" />\n                </button>\n              </AudioBoundary>\n            )\n          : usersGame && (\n              <AudioBoundary>\n                <button\n                  className=\"button complete-button complete\"\n                  onClick={(e) => toggleComplete(e)}\n                >\n                  Resume <div className=\"app__icon one-up\" />\n                </button>\n              </AudioBoundary>\n            )}\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo, useEffect, useContext } from \"react\";\nimport { Block } from \"../../components/Block/Block\";\nimport { useGames } from \"../../hooks/useGames\";\nimport { useParams } from \"react-router-dom\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport \"./GamesPage.scss\";\n\ninterface Props {}\n\nexport const GamesPage: React.FC<Props> = () => {\n  const { games, fetchUsersGames, user, setGames } = useGames();\n  const params = useParams();\n  const userId = params.userId;\n  const { setCurrentUser, currentUser } = useContext(UserContext);\n  const followUser = makeSignedRequest(\"PATCH\", `/users/friend/${userId}`);\n  useEffect(() => {\n    fetchUsersGames(userId);\n  }, [userId]);\n\n  const sortedGames = useMemo(() => {\n    if (games && games.length > 0) {\n      const inProgress = games.filter((game: any) => game.completed === false);\n      const finished = games.filter((game: any) => game.completed === true);\n      const sorted = [...inProgress, ...finished];\n      return sorted;\n    } else {\n      return [];\n    }\n  }, [games]);\n\n  const onSubmit = async () => {\n    const { data: updatedUser } = await followUser();\n    setCurrentUser(updatedUser);\n  };\n\n  const isNotCurrentUser = userId !== currentUser._id;\n  const isFriend = currentUser.friends.includes(userId);\n\n  const displayButton = isNotCurrentUser && !isFriend;\n\n  return (\n    <div className=\"games-page center\">\n      <div className=\"header\">\n        {displayButton && (\n          <div\n            className=\"app__icon plus\"\n            onClick={() => onSubmit()}\n            title=\"Add This User to My Friends\"\n          />\n        )}\n        {isFriend && (\n          <div\n            className=\"app__icon star\"\n            title={`${user.userName} is your friend`}\n          />\n        )}\n        {user.userName && (\n          <div className=\"username\">{user.userName}'s Games</div>\n        )}\n      </div>\n      <div className=\"blocks\">\n        {games.length > 0 ? (\n          sortedGames.map((game) => (\n            <Block\n              key={game._id}\n              game={game}\n              completed={game.completed}\n              setGames={setGames}\n            />\n          ))\n        ) : (\n          <div className=\"no-games\">{`Looks like you don't have any games yet! Go add some by clicking the plus sign in the Navbar!`}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FormEvent, useContext } from \"react\";\nimport { User } from \"../../../types/User\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport \"./Friend.scss\";\n\ninterface Props {\n  friend: User;\n}\n\nexport const Friend: React.FC<Props> = ({ friend }) => {\n  const { setCurrentUser, loggedIn, currentUser } = useContext(UserContext);\n  const isFriend = loggedIn && currentUser.friends.includes(friend._id);\n  let history = useHistory();\n\n  const unfriendRequest = makeSignedRequest(\n    \"PATCH\",\n    `/users/unfriend/${friend._id}`\n  );\n\n  const addFriendRequest = makeSignedRequest(\n    \"PATCH\",\n    `/users/friend/${friend._id}`\n  );\n\n  const unfriend = async (e: FormEvent) => {\n    e.preventDefault();\n    const unfriendResponse = await unfriendRequest();\n    setCurrentUser(unfriendResponse.data);\n  };\n\n  const addFriend = async (e: FormEvent) => {\n    e.preventDefault();\n    const addFriendResponse = await addFriendRequest();\n    setCurrentUser(addFriendResponse.data);\n    history.push(\"/gamekeeper/friends\");\n  };\n\n  return (\n    <div className=\"friend\">\n      <div className=\"header\">\n        <div className=\"app__icon mario\" />\n        <Link to={`/gamekeeper/games/${friend._id}`}>\n          <div>\n            <div className=\"username\">{friend.userName}</div>\n            <div>{new Date(friend.createdAt).toDateString()}</div>\n          </div>\n        </Link>\n        {isFriend ? (\n          <div\n            className=\"app__icon goomba\"\n            onClick={(e) => unfriend(e)}\n            title=\"Remove From Friends\"\n          ></div>\n        ) : (\n          <div\n            className=\"app__icon plus\"\n            onClick={(e) => addFriend(e)}\n            title=\"Add Friend\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { Friend } from \"../../components/Friend/Friend\";\nimport \"./FriendsPage.scss\";\n\ninterface Props {}\n\nexport const FriendsPage: React.FC<Props> = () => {\n  const { currentUser } = useContext(UserContext);\n  const [friends, setFriends] = useState<any>([]);\n\n  useEffect(() => {\n    const getFriends = async () => {\n      const friendRequest = makeSignedRequest(\n        \"GET\",\n        `/users/friends/${currentUser._id}`\n      );\n      const friendResponse = await friendRequest();\n      setFriends(friendResponse.data);\n    };\n    getFriends();\n  }, []);\n\n  return (\n    <div className=\"friends-page\">\n      <div className=\"header\">{currentUser.userName}'s Friends</div>\n      <div className=\"friends\">\n        {friends.map((friend: any) => (\n          <Friend friend={friend} key={friend._id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport { GameEntry as GameType } from \"../../../types/Game\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport \"./Game.scss\";\nimport { useGames } from \"../../hooks/useGames\";\n\ninterface Props {\n  game: GameType;\n}\n\nexport const Game: React.FC<Props> = ({ game }) => {\n  const { loggedIn, currentUser } = useContext(UserContext);\n  const { games, fetchUsersGames } = useGames();\n  let history = useHistory();\n\n  useEffect(() => {\n    fetchUsersGames(currentUser._id);\n  }, []);\n\n  const isUsersGame =\n    loggedIn && !!games.find((entry) => entry.gameId === game._id);\n\n  const addGameRequest = makeSignedRequest(\n    \"POST\",\n    `/my-games/${currentUser._id}?gameId=${game._id}`\n  );\n\n  const addGame = async (e) => {\n    e.preventDefault();\n    await addGameRequest();\n    history.push(`/gamekeeper/games/${currentUser._id}`);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"header\">\n        <div className=\"app__icon coin\" />\n        <div>\n          <div className=\"username\">{game.title}</div>\n          <div>{game.platform}</div>\n          <div>{game.year}</div>\n        </div>\n        {!isUsersGame ? (\n          <div\n            className=\"app__icon plus\"\n            onClick={(e) => addGame(e)}\n            title=\"Add Friend\"\n          />\n        ) : (\n          <div className=\"app__icon\" />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FormEvent, useContext, useState } from \"react\";\nimport { makeSignedRequest } from \"../../util/makeSignedRequest\";\nimport { Friend } from \"../../components/Friend/Friend\";\nimport { User } from \"../../../types/User\";\nimport { GameEntry as GameType } from \"../../../types/Game\";\nimport { Game } from \"../../components/Game/Game\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport \"./SearchPage.scss\";\n\ninterface Props {}\n\nexport const SearchPage: React.FC<Props> = () => {\n  const [users, setUsers] = useState([]);\n  const [games, setGames] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const { currentUser } = useContext(UserContext);\n  const searchRequest = makeSignedRequest(\"GET\", `/search?q=${query}`);\n\n  const search = async (e: FormEvent) => {\n    e.preventDefault();\n    const { data: searchResults } = await searchRequest();\n    setUsers(searchResults.userResults);\n    setGames(searchResults.gameResults);\n  };\n\n  return (\n    <div className=\"search-page\">\n      <form onSubmit={(e) => search(e)}>\n        <input type=\"text\" onChange={(e) => setQuery(e.target.value)} />\n        <button type=\"submit\">Search Gamekeeper</button>\n      </form>\n      <div className=\"results\">\n        {users.length > 0 && (\n          <div>\n            <label className=\"result-label\">Users:</label>\n            {users.map((user: User) => {\n              return user._id === currentUser._id ? null : (\n                <Friend friend={user} />\n              );\n            })}\n          </div>\n        )}\n        {games.length > 0 && (\n          <div>\n            <label className=\"result-label\">entries:</label>\n            <div className=\"entries\">\n              {games.map((game: GameType) => {\n                return <Game game={game} />;\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./LandingPage.scss\";\n\ninterface Props {}\n\nexport const LandingPage: React.FC<Props> = () => {\n  return (\n    <div className=\"landing-page\">\n      <h2>Hello! Welcome to Gamekeeper!</h2>\n      <div>\n        Gamekeeper was created to help track the games you play in a given year\n        to help facilitate more productive GOTY disscussions\n      </div>\n      <div>\n        If you're new here, create an account by clicking the link above. If\n        you're already a user, just Login!\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Masthead } from \"../../components/Masthead/Masthead\";\nimport { GamesContext, useGames } from \"../../hooks/useGames\";\nimport { UserForm } from \"../UserForm/UserForm\";\nimport { GamesPage } from \"../../pages/GamesPage/GamesPage\";\nimport { UserContext } from \"../../hooks/useCurrentUser\";\nimport { FriendsPage } from \"../../pages/FriendsPage/FriendsPage\";\nimport { SearchPage } from \"../../pages/SearchPage/SearchPage\";\nimport { LandingPage } from \"../../pages/LandingPage/LandingPage\";\n\ninterface Props {}\n\nexport const AppContent: React.FC<Props> = () => {\n  const { loggedIn } = useContext(UserContext);\n  const { games, setGames, fetchUsersGames, user } = useGames();\n  return (\n    <GamesContext.Provider value={{ games, setGames, fetchUsersGames, user }}>\n      {/* <Router> */}\n      <Masthead />\n      <Switch>\n        <Route exact path=\"/gamekeeper\">\n          <LandingPage />\n        </Route>\n        <Route path=\"/gamekeeper/games/:userId\">\n          <GamesPage />\n        </Route>\n        <Route path=\"/gamekeeper/users/search\">\n          <SearchPage />\n        </Route>\n        {!loggedIn ? (\n          <Route path=\"/gamekeeper/login\">\n            <UserForm type=\"login\" />\n          </Route>\n        ) : (\n          <Redirect to=\"/gamekeeper/games\" from=\"/gamekeeper/login\" />\n        )}\n        {loggedIn ? (\n          <Route path=\"/gamekeeper/friends\">\n            <FriendsPage />\n          </Route>\n        ) : (\n          <Redirect to=\"/gamekeeper/games\" from=\"/gamekeeper/friends\" />\n        )}\n        {!loggedIn ? (\n          <Route path=\"/gamekeeper/register\">\n            <UserForm type=\"register\" />\n          </Route>\n        ) : (\n          <Redirect to=\"/gamekeeper/games\" from=\"/gamekeeper/register\" />\n        )}\n      </Switch>\n      {/* </Router> */}\n    </GamesContext.Provider>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useCurrentUser, UserContext } from \"./hooks/useCurrentUser\";\nimport { AppContent } from \"./components/AppContent/AppContent\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const {\n    currentUser,\n    setCurrentUser,\n    validateUser,\n    loggedIn,\n    setLoggedIn,\n  } = useCurrentUser();\n\n  const history = useHistory();\n  const currentUserId = currentUser?._id;\n\n  useEffect(() => {\n    const userValidationSequence = async () => {\n      await validateUser();\n      if (currentUserId) {\n        history.push(\"/gamekeeper\");\n        // history.push(`/gamekeeper/games/${currentUserId}`);\n      } else {\n        history.push(\"/gamekeeper\");\n      }\n    };\n    userValidationSequence();\n  }, [currentUserId]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"app__background\">\n        <UserContext.Provider\n          value={{ currentUser, setCurrentUser, loggedIn, setLoggedIn }}\n        >\n          <AppContent />\n        </UserContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}